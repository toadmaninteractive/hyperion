// Author: Igor compiler
// Compiler version: igorc 2.1.1
// DO NOT EDIT THIS FILE - it is machine generated

import * as Igor from './igor';

export class Settings {
    personnelSessionDuration!: number;

    static fromJson(json: Igor.Json.JsonValue): Settings {
        const jsonObject = json as Igor.Json.JsonObject;
        const obj = new Settings();
        obj.personnelSessionDuration = jsonObject['personnel_session_duration'] as number;
        return obj;
    }

    static toJson(value: Settings): Igor.Json.JsonValue {
        const result: Igor.Json.JsonObject = {};
        result['personnel_session_duration'] = value.personnelSessionDuration;
        return result;
    }

    toJson(): Igor.Json.JsonValue {
        return Settings.toJson(this);
    }
}

export class SettingsUpdateRequest {
    personnelSessionDuration?: number | null = null;

    static fromJson(json: Igor.Json.JsonValue): SettingsUpdateRequest {
        const jsonObject = json as Igor.Json.JsonObject;
        const obj = new SettingsUpdateRequest();
        obj.personnelSessionDuration = ('personnel_session_duration' in jsonObject && jsonObject['personnel_session_duration'] != null) ? jsonObject['personnel_session_duration'] as number : null;
        return obj;
    }

    static toJson(value: SettingsUpdateRequest): Igor.Json.JsonValue {
        const result: Igor.Json.JsonObject = {};
        if (value.personnelSessionDuration != null) result['personnel_session_duration'] = value.personnelSessionDuration;
        return result;
    }

    toJson(): Igor.Json.JsonValue {
        return SettingsUpdateRequest.toJson(this);
    }
}
