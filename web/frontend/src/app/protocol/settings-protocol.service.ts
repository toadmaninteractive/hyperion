// Author: Igor compiler
// Compiler version: igorc 2.1.1
// DO NOT EDIT THIS FILE - it is machine generated

import { Injectable } from '@angular/core';
import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';
import { Observable, throwError } from 'rxjs';
import { map, catchError } from 'rxjs/operators';
import * as Igor from './igor';
import * as SettingsProtocol from './settings-protocol.data';
import * as DataProtocol from './data-protocol.data';

@Injectable({
    providedIn: 'root',
})
export class HyperionSettingsService {
    public baseUrl = '';

    constructor(private http: HttpClient) { }

    public getSettings(): Observable<SettingsProtocol.Settings> {
        return this.http
            .get(`${this.baseUrl}/api/admin/settings`)
            .pipe(
                map(response => SettingsProtocol.Settings.fromJson(response as Igor.Json.JsonValue))
            );
    }

    public updateSettings(request: SettingsProtocol.SettingsUpdateRequest): Observable<DataProtocol.GenericResponse> {
        const options = { headers: new HttpHeaders({'Content-Type': 'application/json' }) };

        return this.http
            .put(`${this.baseUrl}/api/admin/settings`, request.toJson(), options)
            .pipe(
                map(response => DataProtocol.GenericResponse.fromJson(response as Igor.Json.JsonValue))
            );
    }
}
