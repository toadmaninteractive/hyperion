%% Author: Igor compiler
%% Compiler version: igorc 2.1.1
%% DO NOT EDIT THIS FILE - it is machine generated

-record(personnel_account, {
    id :: igor_types:long(),
    rev :: igor_types:int(),
    username :: binary(),
    name :: binary() | 'undefined',
    email :: binary() | 'undefined',
    phone :: binary() | 'undefined',
    is_blocked :: boolean(),
    is_deleted :: boolean(),
    is_superadmin :: boolean(),
    created_at :: iso8601:datetimems(),
    updated_at :: iso8601:datetimems()
}).

-record(personnel_account_profile, {
    id :: igor_types:long(),
    rev :: igor_types:int(),
    username :: binary(),
    name :: binary() | 'undefined',
    email :: binary() | 'undefined',
    phone :: binary() | 'undefined',
    is_blocked :: boolean(),
    is_deleted :: boolean(),
    is_project_manager :: boolean(),
    is_superadmin :: boolean(),
    created_at :: iso8601:datetimems(),
    updated_at :: iso8601:datetimems()
}).

-record(personnel_account_role, {
    personnel_id :: igor_types:long(),
    username :: binary(),
    project_id :: igor_types:long(),
    project_title :: binary(),
    group_roles :: igor_json:json() | 'undefined',
    user_role :: protocol_db:access_role() | 'undefined'
}).

-record(personnel_group, {
    id :: igor_types:long(),
    rev :: igor_types:int(),
    name :: binary(),
    description :: binary() | 'undefined',
    is_deleted :: boolean(),
    members :: [binary()],
    member_count :: igor_types:int(),
    is_superadmin :: boolean(),
    created_at :: iso8601:datetimems(),
    updated_at :: iso8601:datetimems()
}).

-record(personnel_group_role, {
    group_id :: igor_types:long(),
    group_name :: binary(),
    project_id :: igor_types:long(),
    project_title :: binary(),
    group_role :: protocol_db:access_role() | 'undefined'
}).

-record(project, {
    id :: igor_types:long(),
    rev :: igor_types:int(),
    title :: binary(),
    key :: binary(),
    slack_receivers :: binary() | 'undefined',
    owner_id :: igor_types:long(),
    owner_name :: binary(),
    jira_id :: igor_types:long() | 'undefined',
    jira_title :: binary() | 'undefined',
    jira_url :: binary() | 'undefined',
    jira_key :: binary() | 'undefined',
    created_at :: iso8601:datetimems(),
    updated_at :: iso8601:datetimems()
}).

-record(setup_step, {
    id :: igor_types:long(),
    rev :: igor_types:int(),
    parent_id :: igor_types:long() | 'undefined',
    project_id :: igor_types:long(),
    title :: binary() | 'undefined',
    description :: binary() | 'undefined',
    is_draft :: boolean(),
    order_num :: igor_types:int(),
    parameter_id :: igor_types:long() | 'undefined',
    created_at :: iso8601:datetimems(),
    updated_at :: iso8601:datetimems()
}).

-record(test_case_specialization, {
    setup_id :: igor_types:long(),
    spec_type :: protocol_db:spec_type(),
    value :: binary() | 'undefined',
    parameter_id :: igor_types:long() | 'undefined'
}).

-record(test_case, {
    id :: igor_types:long(),
    rev :: igor_types:int(),
    parent_id :: igor_types:long() | 'undefined',
    project_id :: igor_types:long(),
    precondition_id :: igor_types:long() | 'undefined',
    setup_id :: igor_types:long() | 'undefined',
    is_group :: boolean(),
    title :: binary() | 'undefined',
    description :: binary() | 'undefined',
    test_steps :: binary(),
    expected_result :: binary(),
    is_draft :: boolean(),
    order_num :: igor_types:int(),
    specs = [] :: [protocol_db:test_case_specialization()],
    created_at :: iso8601:datetimems(),
    updated_at :: iso8601:datetimems()
}).

-record(test_run, {
    id :: igor_types:long(),
    rev :: igor_types:int(),
    project_id :: igor_types:long(),
    title :: binary() | 'undefined',
    status :: protocol_db:test_run_status(),
    created_at :: iso8601:datetimems(),
    updated_at :: iso8601:datetimems(),
    started_at :: iso8601:datetimems() | 'undefined',
    finished_at :: iso8601:datetimems() | 'undefined',
    total_item_count :: igor_types:int(),
    pending_item_count :: igor_types:int(),
    in_progress_item_count :: igor_types:int(),
    passed_item_count :: igor_types:int(),
    failed_item_count :: igor_types:int(),
    blocked_item_count :: igor_types:int()
}).

-record(specialized_setup, {
    setup_id :: igor_types:long(),
    param :: binary(),
    value :: binary()
}).

-record(test_run_item_params, {
    setup_steps = [] :: [igor_types:long()],
    specs = [] :: [protocol_db:specialized_setup()]
}).

-record(test_run_item, {
    id :: igor_types:long(),
    rev :: igor_types:int(),
    run_id :: igor_types:long(),
    case_id :: igor_types:long(),
    reporter_id :: igor_types:long(),
    reporter_name :: binary(),
    assignee_id :: igor_types:long() | 'undefined',
    assignee_name :: binary() | 'undefined',
    status :: protocol_db:test_status(),
    summary :: binary() | 'undefined',
    failed_setup_id :: igor_types:long() | 'undefined',
    order_num :: igor_types:int(),
    params :: protocol_db:test_run_item_params(),
    jira_issue_key :: binary() | 'undefined',
    jira_issue_url :: binary() | 'undefined',
    created_at :: iso8601:datetimems(),
    updated_at :: iso8601:datetimems(),
    started_at :: iso8601:datetimems() | 'undefined',
    finished_at :: iso8601:datetimems() | 'undefined'
}).

-record(file_attachment, {
    id :: igor_types:long(),
    file_size :: igor_types:long(),
    file_sha :: binary(),
    filename :: binary(),
    thumb_filename :: binary() | 'undefined',
    original_filename :: binary() | 'undefined',
    content_type :: binary() | 'undefined',
    personnel_id :: igor_types:long(),
    personnel_name :: binary(),
    created_at :: iso8601:datetimems()
}).

-record(file_attachment_link, {
    attachment_id :: igor_types:long(),
    owner :: protocol_db:attachment_owner(),
    linked_id :: igor_types:long(),
    project_id :: igor_types:long(),
    personnel_id :: igor_types:long(),
    personnel_name :: binary(),
    created_at :: iso8601:datetimems()
}).

-record(parameter_value, {
    value :: binary(),
    dependent_value :: binary() | 'undefined'
}).

-record(parameter, {
    id :: igor_types:long(),
    rev :: igor_types:int(),
    project_id :: igor_types:long(),
    parent_id :: igor_types:long() | 'undefined',
    dependent_id :: igor_types:long() | 'undefined',
    title :: binary(),
    values = [] :: [protocol_db:parameter_value()],
    created_at :: iso8601:datetimems(),
    updated_at :: iso8601:datetimems()
}).

-record(jira_instance, {
    id :: igor_types:long(),
    title :: binary(),
    url :: binary(),
    created_at :: iso8601:datetimems(),
    updated_at :: iso8601:datetimems()
}).

-record(jira_auth, {
    jira_id :: igor_types:long(),
    personnel_id :: igor_types:long(),
    username :: binary(),
    auth_token :: binary(),
    created_at :: iso8601:datetimems(),
    updated_at :: iso8601:datetimems()
}).

