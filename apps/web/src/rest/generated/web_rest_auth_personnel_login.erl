%% @author Igor compiler
%% @doc Compiler version: igorc 2.1.1
%% DO NOT EDIT THIS FILE - it is machine generated

-module(web_rest_auth_personnel_login).

-include_lib("igor/include/igor_http.hrl").

-export([
    init/2
]).

init(Req0, Opts) ->
    Method = cowboy_req:method(Req0),
    Req = handle_method(Method, Req0),
    {ok, Req, Opts}.

handle_method(<<"POST">>, Req) ->
    case cowboy_req:has_body(Req) of
        true -> handle_post(Req);
        false -> cowboy_req:reply(400, Req)
    end;
handle_method(_, Req) ->
    ResponseHeaders = #{<<"Allow">> => <<"POST">>},
    cowboy_req:reply(405, ResponseHeaders, Req).

handle_post(Req) ->
    try
        {ok, RequestBody, Req1} = cowboy_req:read_body(Req),
        Request = protocol_auth:personnel_login_request_from_json(jsx:decode(RequestBody, [return_maps])),
        {Response, Req2} = web_rest_callback_personnel:login_personnel(Request, Req1),
        Body = jsx:encode(protocol_auth:personnel_login_response_to_json(Response)),
        ResponseHeaders = #{<<"Content-Type">> => <<"application/json; charset=utf-8">>},
        cowboy_req:reply(200, ResponseHeaders, Body, Req2)
    catch
        #bad_request{} ->
            cowboy_req:reply(400, Req)
    end.

