%% @author Igor compiler
%% @doc Compiler version: igorc 2.1.1
%% DO NOT EDIT THIS FILE - it is machine generated

-module(protocol_jira).

-include_lib("stdlib/include/assert.hrl").
-include("protocol_jira.hrl").

-export([
    jira_instance_error_to_string/1,
    jira_instance_error_from_string/1,
    jira_instance_error_to_json/1,
    jira_instance_error_from_json/1,
    jira_issue_error_to_string/1,
    jira_issue_error_from_string/1,
    jira_issue_error_to_json/1,
    jira_issue_error_from_json/1,
    jira_authentication_error_to_string/1,
    jira_authentication_error_from_string/1,
    jira_authentication_error_to_json/1,
    jira_authentication_error_from_json/1,
    create_jira_instance_request_to_json/1,
    create_jira_instance_request_from_json/1,
    update_jira_instance_request_to_json/1,
    update_jira_instance_request_from_json/1,
    create_jira_issue_request_to_json/1,
    create_jira_issue_request_from_json/1,
    create_jira_issue_response_to_json/1,
    create_jira_issue_response_from_json/1,
    authenticate_jira_request_to_json/1,
    authenticate_jira_request_from_json/1
]).

-export_type([
    create_jira_instance_request/0,
    update_jira_instance_request/0,
    jira_instance_error/0,
    create_jira_issue_request/0,
    create_jira_issue_response/0,
    jira_issue_error/0,
    authenticate_jira_request/0,
    jira_authentication_error/0
]).

-type create_jira_instance_request() :: #create_jira_instance_request{}.
-type update_jira_instance_request() :: #update_jira_instance_request{}.
-type jira_instance_error() :: 'title_already_exists' | 'invalid_title' | 'invalid_url'.
-type create_jira_issue_request() :: #create_jira_issue_request{}.
-type create_jira_issue_response() :: #create_jira_issue_response{}.
-type jira_issue_error() :: 'jira_issue_already_assigned' | 'jira_instance_not_linked' | 'invalid_jira_instance' | 'invalid_jira_key' | 'invalid_jira_url' | 'jira_user_not_exists' | 'no_credentials' | 'invalid_credentials' | 'invalid_project' | 'invalid_summary'.
-type authenticate_jira_request() :: #authenticate_jira_request{}.
-type jira_authentication_error() :: 'invalid_jira_instance' | 'invalid_jira_url' | 'jira_user_not_exists' | 'invalid_credentials'.

-spec jira_instance_error_to_string(jira_instance_error()) -> binary().

jira_instance_error_to_string(title_already_exists) -> <<"title_already_exists">>;
jira_instance_error_to_string(invalid_title) -> <<"invalid_title">>;
jira_instance_error_to_string(invalid_url) -> <<"invalid_url">>.

-spec jira_instance_error_from_string(binary()) -> jira_instance_error().

jira_instance_error_from_string(<<"title_already_exists">>) -> title_already_exists;
jira_instance_error_from_string(<<"invalid_title">>) -> invalid_title;
jira_instance_error_from_string(<<"invalid_url">>) -> invalid_url.

-spec jira_instance_error_to_json(jira_instance_error()) -> igor_json:json_string().

jira_instance_error_to_json(title_already_exists) -> <<"title_already_exists">>;
jira_instance_error_to_json(invalid_title) -> <<"invalid_title">>;
jira_instance_error_to_json(invalid_url) -> <<"invalid_url">>.

-spec jira_instance_error_from_json(igor_json:json()) -> jira_instance_error().

jira_instance_error_from_json(<<"title_already_exists">>) -> title_already_exists;
jira_instance_error_from_json(<<"invalid_title">>) -> invalid_title;
jira_instance_error_from_json(<<"invalid_url">>) -> invalid_url.

-spec jira_issue_error_to_string(jira_issue_error()) -> binary().

jira_issue_error_to_string(jira_issue_already_assigned) -> <<"jira_issue_already_assigned">>;
jira_issue_error_to_string(jira_instance_not_linked) -> <<"jira_instance_not_linked">>;
jira_issue_error_to_string(invalid_jira_instance) -> <<"invalid_jira_instance">>;
jira_issue_error_to_string(invalid_jira_key) -> <<"invalid_jira_key">>;
jira_issue_error_to_string(invalid_jira_url) -> <<"invalid_jira_url">>;
jira_issue_error_to_string(jira_user_not_exists) -> <<"jira_user_not_exists">>;
jira_issue_error_to_string(no_credentials) -> <<"no_credentials">>;
jira_issue_error_to_string(invalid_credentials) -> <<"invalid_credentials">>;
jira_issue_error_to_string(invalid_project) -> <<"invalid_project">>;
jira_issue_error_to_string(invalid_summary) -> <<"invalid_summary">>.

-spec jira_issue_error_from_string(binary()) -> jira_issue_error().

jira_issue_error_from_string(<<"jira_issue_already_assigned">>) -> jira_issue_already_assigned;
jira_issue_error_from_string(<<"jira_instance_not_linked">>) -> jira_instance_not_linked;
jira_issue_error_from_string(<<"invalid_jira_instance">>) -> invalid_jira_instance;
jira_issue_error_from_string(<<"invalid_jira_key">>) -> invalid_jira_key;
jira_issue_error_from_string(<<"invalid_jira_url">>) -> invalid_jira_url;
jira_issue_error_from_string(<<"jira_user_not_exists">>) -> jira_user_not_exists;
jira_issue_error_from_string(<<"no_credentials">>) -> no_credentials;
jira_issue_error_from_string(<<"invalid_credentials">>) -> invalid_credentials;
jira_issue_error_from_string(<<"invalid_project">>) -> invalid_project;
jira_issue_error_from_string(<<"invalid_summary">>) -> invalid_summary.

-spec jira_issue_error_to_json(jira_issue_error()) -> igor_json:json_string().

jira_issue_error_to_json(jira_issue_already_assigned) -> <<"jira_issue_already_assigned">>;
jira_issue_error_to_json(jira_instance_not_linked) -> <<"jira_instance_not_linked">>;
jira_issue_error_to_json(invalid_jira_instance) -> <<"invalid_jira_instance">>;
jira_issue_error_to_json(invalid_jira_key) -> <<"invalid_jira_key">>;
jira_issue_error_to_json(invalid_jira_url) -> <<"invalid_jira_url">>;
jira_issue_error_to_json(jira_user_not_exists) -> <<"jira_user_not_exists">>;
jira_issue_error_to_json(no_credentials) -> <<"no_credentials">>;
jira_issue_error_to_json(invalid_credentials) -> <<"invalid_credentials">>;
jira_issue_error_to_json(invalid_project) -> <<"invalid_project">>;
jira_issue_error_to_json(invalid_summary) -> <<"invalid_summary">>.

-spec jira_issue_error_from_json(igor_json:json()) -> jira_issue_error().

jira_issue_error_from_json(<<"jira_issue_already_assigned">>) -> jira_issue_already_assigned;
jira_issue_error_from_json(<<"jira_instance_not_linked">>) -> jira_instance_not_linked;
jira_issue_error_from_json(<<"invalid_jira_instance">>) -> invalid_jira_instance;
jira_issue_error_from_json(<<"invalid_jira_key">>) -> invalid_jira_key;
jira_issue_error_from_json(<<"invalid_jira_url">>) -> invalid_jira_url;
jira_issue_error_from_json(<<"jira_user_not_exists">>) -> jira_user_not_exists;
jira_issue_error_from_json(<<"no_credentials">>) -> no_credentials;
jira_issue_error_from_json(<<"invalid_credentials">>) -> invalid_credentials;
jira_issue_error_from_json(<<"invalid_project">>) -> invalid_project;
jira_issue_error_from_json(<<"invalid_summary">>) -> invalid_summary.

-spec jira_authentication_error_to_string(jira_authentication_error()) -> binary().

jira_authentication_error_to_string(invalid_jira_instance) -> <<"invalid_jira_instance">>;
jira_authentication_error_to_string(invalid_jira_url) -> <<"invalid_jira_url">>;
jira_authentication_error_to_string(jira_user_not_exists) -> <<"jira_user_not_exists">>;
jira_authentication_error_to_string(invalid_credentials) -> <<"invalid_credentials">>.

-spec jira_authentication_error_from_string(binary()) -> jira_authentication_error().

jira_authentication_error_from_string(<<"invalid_jira_instance">>) -> invalid_jira_instance;
jira_authentication_error_from_string(<<"invalid_jira_url">>) -> invalid_jira_url;
jira_authentication_error_from_string(<<"jira_user_not_exists">>) -> jira_user_not_exists;
jira_authentication_error_from_string(<<"invalid_credentials">>) -> invalid_credentials.

-spec jira_authentication_error_to_json(jira_authentication_error()) -> igor_json:json_string().

jira_authentication_error_to_json(invalid_jira_instance) -> <<"invalid_jira_instance">>;
jira_authentication_error_to_json(invalid_jira_url) -> <<"invalid_jira_url">>;
jira_authentication_error_to_json(jira_user_not_exists) -> <<"jira_user_not_exists">>;
jira_authentication_error_to_json(invalid_credentials) -> <<"invalid_credentials">>.

-spec jira_authentication_error_from_json(igor_json:json()) -> jira_authentication_error().

jira_authentication_error_from_json(<<"invalid_jira_instance">>) -> invalid_jira_instance;
jira_authentication_error_from_json(<<"invalid_jira_url">>) -> invalid_jira_url;
jira_authentication_error_from_json(<<"jira_user_not_exists">>) -> jira_user_not_exists;
jira_authentication_error_from_json(<<"invalid_credentials">>) -> invalid_credentials.

-spec create_jira_instance_request_to_json(create_jira_instance_request()) -> igor_json:json_object().

create_jira_instance_request_to_json(Record) ->
    #create_jira_instance_request{title = Title, url = Url} = Record,
    ?assert(Title =/= undefined),
    ?assert(Url =/= undefined),
    #{
        <<"title">> => igor_json:pack(Title, string),
        <<"url">> => igor_json:pack(Url, string)
    }.

-spec create_jira_instance_request_from_json(igor_json:json_object()) -> create_jira_instance_request().

create_jira_instance_request_from_json(Json) ->
    Title = igor_json:parse(Json, <<"title">>, string),
    Url = igor_json:parse(Json, <<"url">>, string),
    #create_jira_instance_request{title = Title, url = Url}.

-spec update_jira_instance_request_to_json(update_jira_instance_request()) -> igor_json:json_object().

update_jira_instance_request_to_json(Record) ->
    #update_jira_instance_request{title = Title, url = Url} = Record,
    Json1 = igor_json:maybe_pack_field(#{}, <<"title">>, Title, {nullable, string}),
    Json2 = igor_json:maybe_pack_field(Json1, <<"url">>, Url, {nullable, string}),
    Json2.

-spec update_jira_instance_request_from_json(igor_json:json_object()) -> update_jira_instance_request().

update_jira_instance_request_from_json(Json) ->
    Title = igor_json:parse(Json, <<"title">>, {nullable, string}, undefined),
    Url = igor_json:parse(Json, <<"url">>, {nullable, string}, undefined),
    #update_jira_instance_request{title = Title, url = Url}.

-spec create_jira_issue_request_to_json(create_jira_issue_request()) -> igor_json:json_object().

create_jira_issue_request_to_json(Record) ->
    #create_jira_issue_request{summary = Summary, description = Description} = Record,
    ?assert(Summary =/= undefined),
    ?assert(Description =/= undefined),
    #{
        <<"summary">> => igor_json:pack(Summary, string),
        <<"description">> => igor_json:pack(Description, string)
    }.

-spec create_jira_issue_request_from_json(igor_json:json_object()) -> create_jira_issue_request().

create_jira_issue_request_from_json(Json) ->
    Summary = igor_json:parse(Json, <<"summary">>, string),
    Description = igor_json:parse(Json, <<"description">>, string),
    #create_jira_issue_request{summary = Summary, description = Description}.

-spec create_jira_issue_response_to_json(create_jira_issue_response()) -> igor_json:json_object().

create_jira_issue_response_to_json(Record) ->
    #create_jira_issue_response{jira_issue_key = JiraIssueKey, jira_issue_url = JiraIssueUrl} = Record,
    ?assert(JiraIssueKey =/= undefined),
    ?assert(JiraIssueUrl =/= undefined),
    #{
        <<"jira_issue_key">> => igor_json:pack(JiraIssueKey, string),
        <<"jira_issue_url">> => igor_json:pack(JiraIssueUrl, string)
    }.

-spec create_jira_issue_response_from_json(igor_json:json_object()) -> create_jira_issue_response().

create_jira_issue_response_from_json(Json) ->
    JiraIssueKey = igor_json:parse(Json, <<"jira_issue_key">>, string),
    JiraIssueUrl = igor_json:parse(Json, <<"jira_issue_url">>, string),
    #create_jira_issue_response{jira_issue_key = JiraIssueKey, jira_issue_url = JiraIssueUrl}.

-spec authenticate_jira_request_to_json(authenticate_jira_request()) -> igor_json:json_object().

authenticate_jira_request_to_json(Record) ->
    #authenticate_jira_request{username = Username, password = Password} = Record,
    ?assert(Username =/= undefined),
    ?assert(Password =/= undefined),
    #{
        <<"username">> => igor_json:pack(Username, string),
        <<"password">> => igor_json:pack(Password, string)
    }.

-spec authenticate_jira_request_from_json(igor_json:json_object()) -> authenticate_jira_request().

authenticate_jira_request_from_json(Json) ->
    Username = igor_json:parse(Json, <<"username">>, string),
    Password = igor_json:parse(Json, <<"password">>, string),
    #authenticate_jira_request{username = Username, password = Password}.

