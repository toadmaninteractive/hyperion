%% Author: Igor compiler
%% Compiler version: igorc 2.1.1
%% DO NOT EDIT THIS FILE - it is machine generated

-record(hello, {
}).

-record(project_created, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:project()
}).

-record(project_updated, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:project()
}).

-record(project_deleted, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:project()
}).

-record(parameter_created, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:parameter()
}).

-record(parameter_updated, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:parameter()
}).

-record(parameter_deleted, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:parameter()
}).

-record(setup_step_created, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:setup_step()
}).

-record(setup_step_updated, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:setup_step()
}).

-record(setup_step_deleted, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:setup_step()
}).

-record(test_case_created, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:test_case()
}).

-record(test_case_updated, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:test_case()
}).

-record(test_case_deleted, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:test_case()
}).

-record(test_run_created, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:test_run()
}).

-record(test_run_updated, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:test_run()
}).

-record(test_run_started, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:test_run()
}).

-record(test_run_closed, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:test_run()
}).

-record(test_run_reopened, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:test_run()
}).

-record(test_run_deleted, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:test_run()
}).

-record(test_created, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:test_run_item()
}).

-record(test_updated, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:test_run_item()
}).

-record(test_started, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:test_run_item()
}).

-record(test_passed, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:test_run_item()
}).

-record(test_failed, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:test_run_item()
}).

-record(test_blocked, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:test_run_item()
}).

-record(test_reopened, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:test_run_item()
}).

-record(test_deleted, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:test_run_item()
}).

-record(attachment_linked, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    attachment :: protocol_db:file_attachment(),
    link :: protocol_db:file_attachment_link()
}).

-record(attachment_unlinked, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    attachment :: protocol_db:file_attachment(),
    link :: protocol_db:file_attachment_link()
}).

-record(jira_instance_created, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:jira_instance()
}).

-record(jira_instance_updated, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:jira_instance()
}).

-record(jira_instance_deleted, {
    actor_id :: igor_types:long(),
    actor_name :: binary(),
    data :: protocol_db:jira_instance()
}).

